---
import { Icon } from "astro-icon";
import ContentSection from "~/components/content-section.astro";
import type { FeatureItem } from "~/types";

const features: Array<FeatureItem> = [
  {
    title: "Constrained Auto-Regressive Decoding: Bring Your Own IPFS backed NewSQL PuNP Database to an Interactive LLM Encoding",
    description:
      "Supercolumnar or Row based SQL or NoSQL - Transfer Learning for Optimized Online Database Processing.",
    icon: "mdi:handshake",
  },
  {
    title: "Learned Indices for Enhanced Retrieval; One Language Model to Rule Over All Databases - EinsteinDB and GPT4",
    description:
      "Query Rewriting, Processing, and Event-laden and unique tuplespace mangling through thread shredding",
    icon: "mdi:feather",
  },
  {
    title: "Key-Value on Merkle Trees with Deep Bloom Copies ",
    description:
      "Multi-Dimensional and Relativistic Consistent Append-only Ledgers for Optimal Consensus in Sparse networks",
    icon: "mdi:directions-fork",
  },
  {
    title: "Distributed Database Management through Replicated Logs and Multi-Raft Leaderless Elections",
    description:
      "Interactive Pub-Sub and Write-Ahead-Log Free Denoising Suffix Tree Computing for On-line Paginations and Consistent Reads",
    icon: "mdi:graph",
  },
  {
    title: "FIDel -- Federated Hash and Range Prefixed Downstream Task Capitulation for Distributed Indexing ",
    description:
      "Automatic sitemaps, RSS feeds, pagination and collections take the pain out of SEO and syndication.",
    icon: "mdi:search-web",
  },
  {
    title: "",
    description:
      "Astro is an open source project powered by hundreds of contributors making thousands of individual contributions.",
    icon: "mdi:account-group",
  },
];
---

<ContentSection title="Features" id="features">
  <Fragment slot="lead">
    EinsteinDB deploys with <span class="text-primary">K8s, Docker Swarm, Mesos, Ansible, EKS </span>, Rancher
    for Continuous Integration and Continuous Deployment with GKE, and OpenShift Container Platform with Red Hat and Oracle.
    <span class="text-primary">state-of-the-art</span>
    <span class="text-primary">innovations</span>.
  </Fragment>
  <ul class="grid max-w-6xl grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
    {
      features.map(({ title, description, icon }) => (
        <li class="flex flex-col items-center gap-4 border border-default bg-offset p-6">
          <div class="h-16 w-16 rounded-full border-2 border-current p-3">
            <Icon name={icon} />
          </div>
          <p class="text-center font-extrabold text-xl">{title}</p>
          <p class="text-center text-offset text-sm">{description}</p>
        </li>
      ))
    }
  </ul>
</ContentSection>
